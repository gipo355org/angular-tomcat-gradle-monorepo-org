import{_ as e,c as a,o as s,a5 as n}from"./chunks/framework.BGfKG4OG.js";const x=JSON.parse('{"title":"Releases","description":"","frontmatter":{},"headers":[],"relativePath":"docs/releases.md","filePath":"docs/releases.md"}'),o={name:"docs/releases.md"},r=n('<h1 id="releases" tabindex="-1">Releases <a class="header-anchor" href="#releases" aria-label="Permalink to &quot;Releases&quot;">​</a></h1><p>doc section about versioning, releases and publishing in nx</p><h2 id="changesets" tabindex="-1">changesets <a class="header-anchor" href="#changesets" aria-label="Permalink to &quot;changesets&quot;">​</a></h2><h2 id="nx-release" tabindex="-1">nx release <a class="header-anchor" href="#nx-release" aria-label="Permalink to &quot;nx release&quot;">​</a></h2><p>As anticipated in <a href="./nx.html#release">nx</a>, the release process is managed by the <code>nx release</code> command and is split in 3 commands or 1 that does it all.</p><p>While <code>nx version</code> and <code>nx changelog</code> are good, they lack some features and are quite strict on customization options.</p><h3 id="the-problems" tabindex="-1"><strong>The problems</strong> <a class="header-anchor" href="#the-problems" aria-label="Permalink to &quot;**The problems**&quot;">​</a></h3><h4 id="nx-version" tabindex="-1">nx version <a class="header-anchor" href="#nx-version" aria-label="Permalink to &quot;nx version&quot;">​</a></h4><ul><li>the command bumps version based on conventional commits if configured</li><li>can enter pre-release mode</li><li>requires manual versioning when switching off of <code>preid</code>, doesn&#39;t keep track of stable version and doesn&#39;t reconcile it with the pre-release version automatically</li></ul><h4 id="nx-changelog" tabindex="-1">nx changelog <a class="header-anchor" href="#nx-changelog" aria-label="Permalink to &quot;nx changelog&quot;">​</a></h4><h4 id="nx-publish" tabindex="-1">nx publish <a class="header-anchor" href="#nx-publish" aria-label="Permalink to &quot;nx publish&quot;">​</a></h4>',11),t=[r];function i(l,c,h,d,m,p){return s(),a("div",null,t)}const b=e(o,[["render",i]]);export{x as __pageData,b as default};
