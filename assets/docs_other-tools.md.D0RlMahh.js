import{_ as e,c as t,o,a5 as a}from"./chunks/framework.BGfKG4OG.js";const _=JSON.parse('{"title":"Other tools","description":"","frontmatter":{},"headers":[],"relativePath":"docs/other-tools.md","filePath":"docs/other-tools.md"}'),i={name:"docs/other-tools.md"},s=a('<h1 id="other-tools" tabindex="-1">Other tools <a class="header-anchor" href="#other-tools" aria-label="Permalink to &quot;Other tools&quot;">​</a></h1><p>List of other tools used in the project.</p><h3 id="pre-commit" tabindex="-1">pre-commit <a class="header-anchor" href="#pre-commit" aria-label="Permalink to &quot;pre-commit&quot;">​</a></h3><p>todo</p><h3 id="syncpack" tabindex="-1">syncpack <a class="header-anchor" href="#syncpack" aria-label="Permalink to &quot;syncpack&quot;">​</a></h3><p>todo</p><h3 id="commitlint" tabindex="-1">commitlint <a class="header-anchor" href="#commitlint" aria-label="Permalink to &quot;commitlint&quot;">​</a></h3><p>todo</p><h3 id="linters-formatters" tabindex="-1">Linters / formatters <a class="header-anchor" href="#linters-formatters" aria-label="Permalink to &quot;Linters / formatters&quot;">​</a></h3><p><strong>java</strong></p><ul><li>spotless</li><li>rewrite</li></ul><p><strong>ts</strong></p><ul><li>prettier</li><li>eslint</li><li>biome</li><li>stylelint</li><li>htmlhint</li><li>htmlvalidate</li></ul><h3 id="vitepress" tabindex="-1">vitepress <a class="header-anchor" href="#vitepress" aria-label="Permalink to &quot;vitepress&quot;">​</a></h3><p>serve with pnpm docs:dev</p><h3 id="pnpm" tabindex="-1">pnpm <a class="header-anchor" href="#pnpm" aria-label="Permalink to &quot;pnpm&quot;">​</a></h3><p>pnpm is used to speed up the installation of the dependencies and save time in CI.</p><p>the file <code>{root}/pnpm-workspace.yaml</code> is used to define the packages.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>while pnpm workspaces is not required for nx to work, it&#39;s needed by some tools like changesets which depend on it to provide intellisense when adding packages</p></div>',19),r=[s];function l(n,p,c,h,d,m){return o(),t("div",null,r)}const f=e(i,[["render",l]]);export{_ as __pageData,f as default};
